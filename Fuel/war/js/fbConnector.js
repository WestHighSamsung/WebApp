// Generated by CoffeeScript 1.6.3
(function() {
  (function(exports) {
    Ember.Facebook = Ember.Mixin.create({
      FBUser: void 0,
      appId: void 0,
      facebookParams: Ember.Object.create(),
      fetchPicture: true,
      init: function() {
        this._super();
        this.set('FBrunning', false);
        return window.FBApp = this;
      },


      facebookConfigChanged: (function() {

        var _this = this;
        this.removeObserver('appId');
        window.fbAsyncInit = function() {
          return _this.fbAsyncInit();
        };
        return $(function() {
          var js;
          $('body').append($("<div>").attr('id', 'fb-root'));
          js = document.createElement('script');
          $(js).attr({
            id: 'facebook-jssdk',
            async: true,
            src: "//connect.facebook.net/en_US/all.js"
          });
          return $('head').append(js);
        });
        
      }).observes('facebookParams', 'appId'),

      fbAsyncInit: function() {
        this.set('FBrunning', true);
        var facebookParams,
          _this = this;
        facebookParams = this.get('facebookParams');
        facebookParams = facebookParams.setProperties({
          appId: this.get('appId' || facebookParams.get('appId') || void 0),
          status: facebookParams.get('status') || true,
          cookie: facebookParams.get('cookie') || true,
          xfbml: facebookParams.get('xfbml') || true,
          channelUrl: facebookParams.get('channelUrl') || void 0
        });
        FB.init(facebookParams);
        this.set('FBloading', true);
        FB.Event.subscribe('auth.authResponseChange', function(response) {
          return _this.updateFBUser(response);
        });
        return FB.getLoginStatus(function(response) {
          return _this.updateFBUser(response);
        });
      },
      updateFBUser: function(response) {
        var _this = this;
        if (response.status === 'connected') {
          return FB.api('/me', function(user) {
            var FBUser;
            FBUser = Ember.Object.create(user);
            FBUser.set('accessToken', response.authResponse.accessToken);
            FBUser.set('expiresIn', response.authResponse.expiresIn);
            if (_this.get('fetchPicture')) {
              return FB.api('/me/picture', function(resp) {
                FBUser.picture = resp.data.url;
                _this.set('FBUser', FBUser);
                return _this.set('FBloading', false);
              });
            } else {
              _this.set('FBUser', FBUser);
              return _this.set('FBloading', false);
            }
          });
        } else {
          this.set('FBUser', false);
          return this.set('FBloading', false);
        }
      }
    });
    return Ember.FacebookView = Ember.View.extend({
      classNameBindings: ['className'],
      attributeBindings: [],
      init: function() {
        var attr;
        this._super();
        this.setClassName();

        return this.attributeBindings.pushObjects((function() {
          var _results;
          _results = [];
          for (attr in this) {
            if (attr.match(/^data-/) != null) {
              _results.push(attr);
            }
          }
          return _results;
        }).call(this));
      },
      setClassName: function() {
        return this.set('className', "fb-" + this.type);
      },
      parse: function() {
        if (typeof FB !== "undefined" && FB !== null) {
          return FB.XFBML.parse(this.$().parent()[0].context);
        }
      },
      didInsertElement: function() {
        return this.parse();
      }
    });
  })({});

}).call(this);




/*
// This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
    FB.init({
      cookie     : true,  // enable cookies to allow the server to access 
      appId      : '1536032630009134',
      xfbml      : true,
      version    : 'v2.2'
    });

    // Now that we've initialized the JavaScript SDK, we call 
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "http://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }*/